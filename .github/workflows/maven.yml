# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: hopfencraft
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        mvn verify -f backend/pom.xml -DDATABASE_URL="${{ secrets.DATABASE_URL }}" \
          -DDB_PASSWORD="${{ secrets.DB_PASSWORD }}" -DDB_USERNAME="${{ secrets.DB_USERNAME }}" \
          -DEMAIL_HOST="${{ secrets.EMAIL_HOST }}" -DEMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
          -DEMAIL_PORT="${{ secrets.EMAIL_PORT }}" -DEMAIL_USERNAME="${{ secrets.EMAIL_USERNAME }}" \
          -DGITHUB_CLIENT="${{ secrets.GHUB_CLIENT }}" -DGITHUB_SECRET="${{ secrets.GHUB_SECRET }}" \
          -DGOOGLE_CLIENT="${{ secrets.GOOGLE_CLIENT }}" -DGOOGLE_SECRET="${{ secrets.GOOGLE_SECRET }}" \
          -DJWT_SIGNING_KEY="${{ secrets.JWT_SIGNING_KEY }}" -DPAYPAL_CLIENT_ID="${{ secrets.PAYPAL_CLIENT_ID }}" \
          -DPAYPAL_CLIENT_SECRET="${{ secrets.PAYPAL_CLIENT_SECRET }}" -DRSA_PRIVATE_EXPONENT="${{ secrets.RSA_PRIVATE_EXPONENT }}" \
          -DRSA_PRIVATE_MODULUS="${{ secrets.RSA_PRIVATE_MODULUS }}" -DRSA_PUBLIC_EXPONENT="${{ secrets.RSA_PUBLIC_EXPONENT }}" \
          -DRSA_PUBLIC_MODULUS="${{ secrets.RSA_PUBLIC_MODULUS }}" -DUPLOAD_FOLDER_PATH="${{ secrets.UPLOAD_FOLDER_PATH }}"

      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        GITHUB_CLIENT: ${{ secrets.GHUB_CLIENT }}
        GITHUB_SECRET: ${{ secrets.GHUB_SECRET }}
        GOOGLE_CLIENT: ${{ secrets.GOOGLE_CLIENT }}
        GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
        JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
        PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID }}
        PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET }}
        RSA_PRIVATE_EXPONENT: ${{ secrets.RSA_PRIVATE_EXPONENT }}
        RSA_PRIVATE_MODULUS: ${{ secrets.RSA_PRIVATE_MODULUS }}
        RSA_PUBLIC_EXPONENT: ${{ secrets.RSA_PUBLIC_EXPONENT }}
        RSA_PUBLIC_MODULUS: ${{ secrets.RSA_PUBLIC_MODULUS }}
        UPLOAD_FOLDER_PATH: ${{ secrets.UPLOAD_FOLDER_PATH }}
        POSTGRES_HOST: localhost    
        POSTGRES_PORT: 5432
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
